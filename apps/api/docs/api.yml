openapi: 3.0.0

info:
  title: Book Data API
  description: API to view data about books, authors, categories and related notes
  version: 0.1.0

servers:
  - url: "CONTAINER_NAME/v1"

paths:
  /books:
    get:
      summary: Get Books
      description: Get all books
      operationId: getBooks
      parameters:
        - name: status
          in: query
          description: This is used to filter books returned by their status
          schema:
            type: string
        - name: page
          in: query
          description: This is used to get specific page
          schema:
            type: integer
        - name: limitPerPage
          in: query
          description: This is used to request specific amount of results in a single page
          schema:
            type: integer
      responses:
        "200":
          description: list of books
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"

  /books/{_id}:
    get:
      summary: Get single Book
      description: Get a single book
      operationId: getBook
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Book"
      responses:
        "200":
          description: return a book
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singleBook"

  /authors:
    get:
      summary: Get Authors
      description: Get all authors
      operationId: getAuthors
      parameters:
        - name: page
          in: query
          description: This is used to get specific page
          schema:
            type: integer
        - name: limitPerPage
          in: query
          description: This is used to request specific amount of results in a single page
          schema:
            type: integer
      responses:
        "200":
          description: list of authors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Authors"

  /authors/{_id}:
    get:
      summary: Get single Author
      description: Get a single Author
      operationId: getAuthor
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Author"
      responses:
        "200":
          description: return an author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singleAuthor"

  /notes:
    get:
      summary: Get Notes
      description: Get all notes
      operationId: getNotes
      parameters:
        - name: page
          in: query
          description: This is used to get specific page
          schema:
            type: integer
        - name: limitPerPage
          in: query
          description: This is used to request specific amount of results in a single page
          schema:
            type: integer
      responses:
        "200":
          description: list of authors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notes"

  /notes/{_id}:
    get:
      summary: Get single Note
      description: Get a single Note
      operationId: getNote
      parameters:
        - name: _id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/Author"
      responses:
        "200":
          description: return an author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/singleNote"

components:
  schemas:
    Response:
      type: object
      properties:
        total:
          type: integer
        totalPages:
          type: integer
        page:
          type: integer
        limitPerPage:
          type: integer
        resultsInPage:
          type: integer

    Book:
      type: object
      required:
        - name
        - category
        - isbn
      properties:
        _id:
          type: string
        name:
          type: string
        author:
          type: string
        isbn:
          type: integer
        olid:
          type: string
        status:
          type: string
          enum:
            - new
            - reading
            - finished
        dateAdded:
          type: string
        category:
          type: string

    Books:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/Book"

    singleBook:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Book"
                  - type: object
                    properties:
                      similarBooks:
                        type: array
                        items:
                          $ref: "#/components/schemas/Book"
                      relatedNotes:
                        $ref: "#/components/schemas/Notes"

    Author:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        books:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
              name:
                type: string

    Authors:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/Author"

    singleAuthor:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Author"

    Note:
      type: object
      required:
        - name
        - category
      properties:
        _id:
          type: string
        name:
          type: string
        category:
          type: string

    Notes:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                $ref: "#/components/schemas/Note"

    singleNote:
      allOf:
        - $ref: "#/components/schemas/Response"
        - type: object
          properties:
            results:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Note"
                  - type: object
                    properties:
                      data:
                        type: string
